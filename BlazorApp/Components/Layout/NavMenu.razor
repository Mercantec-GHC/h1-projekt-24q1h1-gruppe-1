@using Microsoft.AspNetCore.Components.Authorization
@using Npgsql;
@using BlazorApp.Services
@using BlazorApp.Authentication
@inject ICookie cookie
@inject NavigationManager navManager
@inject AuthenticationStateProvider authStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <h3>SONARE</h3>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <div class="nav-container">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home @* KNAP FOR HOME *@
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="products">
                    <span class="bi bi-basket2-fill-nested-nav-menu" aria-hidden="true"></span> Browse Products @* KNAP FOR BROWSE PRODUCTS *@
                </NavLink>
            </div>
            <!-- Show the create listing menu item, if user is logged in -->
            <AuthorizeView>
                <Authorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="createlisting">
                            <span class="bi bi-plus-circle-fill-nested-nav-menu" aria-hidden="true"></span> Create Listing @* KNAP FOR CREATE LISTING *@
                        </NavLink>
                    </div>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView>
                <Authorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="myprofile">
                            <span class="bi bi-plus-circle-fill-nested-nav-menu" aria-hidden="true"></span> My Profile @* KNAP FOR MY PROFILE *@
                        </NavLink>
                    </div>
                </Authorized>
            </AuthorizeView>
        </nav>
        <div class="nav-register-buttons">
            <AuthorizeView>
                <NotAuthorized>

                    <button class="login-button">
                        <div class="nav-item px-3"><NavLink class="nav-link" href="login">LOGIN</NavLink></div> @* KNAP FOR LOGIN *@
                    </button>

                    <button class="register-button">
                        <div class="nav-item px-3"><NavLink class="nav-link" href="createuser">REGISTER</NavLink></div> @* KNAP FOR REGISTER *@
                    </button>

                </NotAuthorized>
                <Authorized>
                    <button class="logout-button">
                        <div class="nav-item px-3"><NavLink class="nav-link" @onclick="Logout" href="javascript:void(0)">LOGOUT</NavLink></div> @* KNAP FOR LOGOUT *@
                    </button>
                </Authorized>
            </AuthorizeView>
        </div>
    </div>
</div>

@code
{
    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider; 
        // casting til CustomAuthenticationStateProvider fordi UpdateAuthenticationState ikke er en del af authStateProvider

        await customAuthStateProvider.UpdateAuthenticationState(null); // sætter til "null" for at rydde AuthenticationStaten

        navManager.NavigateTo("/", true); // smid brugeren tilbage på home page
    }
}
