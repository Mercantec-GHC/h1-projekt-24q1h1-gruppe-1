@page "/login"
@inject UserAccountService UserAccountService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProverider
@using BlazorApp.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using Npgsql
@inject NavigationManager NavigationManager
@inject ICookie cookie

<div class="login-container">
    <h4 class="login-title">Login</h4>

    <div class="form-group">
        <input class="form-input" type="text" @bind="model.username" placeholder="Username" />
    </div>

    <div class="form-group">
        <input class="form-input" type="password" @bind="model.userpassword" placeholder="Password" />
    </div>

    <button class="form-button" @onclick="Submit">Login</button>

    <div class="signup-container">
        <div>Or sign up using</div>
        <a href="/createuser" class="signup-link">Sign up</a>
    </div>
</div>

@code {

    private class Model
    {
        public string username { get; set; }
        public string userpassword { get; set; }
    }

    private Model model = new Model();

    private async Task Submit()
    {
        
        
        var userAccount = UserAccountService.GetByUserName(model.username);
        if (userAccount == null || userAccount.Password != model.userpassword)
        {
            await js.InvokeVoidAsync("alert", "Invalid Username or Password");
            return;
        }

        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProverider;
        await customAuthStateProvider.UpdateAuthenticationState(new UserSession
        {
            UserName = userAccount.UserName

        });
        
        // After the authentication is done, set the useraccount id as a cookie for later use - ex. showing correct info on myprofile.
        string connectionString = "Host=ep-blue-fire-a2nnh5p7.eu-central-1.aws.neon.tech;Username=sonaredb_owner;Password=8LlUVraRtDs9;Database=sonaredb;SSL Mode=Require";
        using var connection = new NpgsqlConnection(connectionString);
        connection.Open();
        using (var cmd = new NpgsqlCommand())
        {
            cmd.Connection = connection;
            cmd.CommandText = @"
            SELECT username, id
            FROM useraccount
            WHERE username = @username AND userpassword = @userpassword";
            cmd.Parameters.AddWithValue("@username", model.username);
            cmd.Parameters.AddWithValue("@userpassword", model.userpassword);
            using (var reader = cmd.ExecuteReader())
            {
                if (reader.Read())
                {
                    int userid = reader.GetInt32(reader.GetOrdinal("id"));
                    await cookie.SetValue("id", $"{userid}");
                }
            }
        }
        // Navigate to myprofile after login.
        NavigationManager.NavigateTo("/myprofile", true);
    }
}