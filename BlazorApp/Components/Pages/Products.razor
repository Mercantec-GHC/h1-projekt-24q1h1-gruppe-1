@page "/products"
@inject List<Headset> allProducts

<PageTitle>Products</PageTitle>

<input @bind="SearchTerm" class="form-control" placeholder="Search by brand, model, color, price etc..." />

<button class="btn btn-primary" @onclick="FilterAndUpdateHeadsets">Search</button>

<br />
<br />

@if (ProductToShow == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="grid-container">
        @foreach (var headset in ProductToShow) // looper i gennem liste med headsets og opretter en div med al info til dem hver
        {
            int productId = headset.id;
            <div class="card" style="width: 18rem;">
                <img src="@headset.imageUrl" class="card-img-top" alt="...">
                <div class="card-body">
                    <h5 class="card-title">@headset.brand</h5>
                    <h5 class="card-model-text">@headset.model</h5>
                    <div class="card-separator"></div>
                    <p class="card-text" style="text-align: center;">
                        PRICE: <span style="font-weight: bold;">$@headset.price</span> <br/>
                    </p>

                    @if (!string.IsNullOrEmpty(headset.description))
                    {
                        <p class="card-description">@headset.description</p>
                    }

                    <div class="center-button-class">
                        <a href="product/@productId" class="btn btn-primary">Show Product</a>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    public string SearchTerm { get; set; } = "";
    public List<Headset> ProductToShow; // Liste der vil blive vist efter filtrering

    protected override void OnInitialized() // Initialiserer ProductToShow med alle produkter
    {
        ProductToShow = allProducts;
    }

    public void FilterAndUpdateHeadsets()
    {
        ProductToShow = FilterBrand(allProducts, SearchTerm.ToLower()); // Opdaterer productsToShow baseret på søgning
    }

    public List<Headset> FilterBrand(List<Headset> allProducts, string searchTerm)  // Filtrerer produkterne med to parametre
    {
        List<Headset> filteredProducts = new List<Headset>(); // Laver liste til at holde på alle filtrerede produkter

        if (!string.IsNullOrEmpty(searchTerm))
        {
            string[] searchKeywords = searchTerm.Split(' '); // Splitter efter mellemrum, hvis der er flere ord

            foreach (var product in allProducts)
            {
                bool matchesAllKeywords = true; // Hvert produkt sættes til true

                foreach (var keyword in searchKeywords)
                {
                    string lowerKeyword = keyword.ToLower(); // Itererer over hvert ord og tjekker for match

                    if (!(product.brand?.ToLower().Contains(lowerKeyword) ?? false) && // "??" for at undgå null exception
                        !(product.model?.ToLower().Contains(lowerKeyword) ?? false) &&
                        !(product.color?.ToLower().Contains(lowerKeyword) ?? false) &&
                        !(product.frequencyRange?.ToLower().Contains(lowerKeyword) ?? false) &&
                        !(product.typeOfConnection?.ToLower().Contains(lowerKeyword) ?? false) &&
                        !(product.closedOrOpen?.ToLower().Contains(lowerKeyword) ?? false) &&
                        !(product.itemCondition?.ToLower().Contains(lowerKeyword) ?? false) &&
                        !(product.description?.ToLower().Contains(lowerKeyword) ?? false) &&
                        !product.price.ToString().Contains(keyword))
                    {
                        matchesAllKeywords = false;
                        break;
                    }
                }

                if (matchesAllKeywords)
                {
                    filteredProducts.Add(product); // Hvis produktet matcher, så er det tilføjet til listen
                }
            }
        }
        else
        {
            filteredProducts = allProducts;
        }

        return filteredProducts; // Viser alle produkter uanset hvad
    }
}