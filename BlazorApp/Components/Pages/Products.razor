@page "/products"
@inject List<Headset> allProducts

<PageTitle>Products</PageTitle>

Sort by brand:
<select @bind="SelectedBrand" class="form-select">
    <option value="">All Brands</option>
    <option value="sony">Sony</option>
    <option value="audeze">Audeze</option>
    <option value="bose">Bose</option>
    <option value="beats">Beats</option>
</select>

<button class="btn btn-primary" @onclick="FilterAndUpdateHeadsets">Click to Sort</button>

<br />
<br />

@if (ProductToshow == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="grid-container">
        @foreach (var headset in ProductToshow) //Ændret fra allProducts
        {
            uint productId = headset.Id;
            <div class="card" style="width: 18rem;">
                <img src="https://media.karousell.com/media/photos/products/2022/7/15/bose_quietcomfort_35_ii_1657861536_6fbc5e2d_progressive.jpg" class="card-img-top" alt="...">
                <div class="card-body">
                    <h5 class="card-title">@headset.brand</h5>
                    <p class="card-text">
                        Model: @headset.model <br /> Color: @headset.color <br /> Price: @headset.price <br />
                    </p>
                    <a href="product/@productId" class="btn btn-primary">Show Product</a>
                </div>
            </div>
        }
    </div>
}

@code {
    public string SelectedBrand = ""; // Initialize to an empty string
    public List<Headset> ProductToshow;

    protected override void OnInitialized()
    {
        ProductToshow = allProducts;
    }

    public void FilterAndUpdateHeadsets()
    {
        ProductToshow = FilterBrand(allProducts, SelectedBrand);
    }

    public List<Headset> FilterBrand(List<Headset> allProducts, string brandFilter)
    {
        if (!string.IsNullOrEmpty(brandFilter)) // Check if brandFilter is not null or empty
        {
            return allProducts.Where(headset => headset.brand.ToLower() == brandFilter.ToLower()).ToList();
        }
        else
        {
            return allProducts;
        }
    }
}